{"version":3,"file":"static/js/908.09c8f591.chunk.js","mappings":"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","sources":["pages/steps/stepClause/stepClauseForm/StepClauseForm.tsx","zustandStores/useCaptchaStore.tsx","pages/steps/stepSummary/Captcha.tsx","pages/steps/stepsButtons/ButtonClauseSubmit.tsx","pages/steps/stepsButtons/ButtonFormSubmit.tsx","zustandStores/useHttpStore.tsx","pages/steps/stepsButtons/ButtonPOSTvalues.tsx","data/dataURL.tsx","pages/steps/stepsButtons/ButtonReturn.tsx","pages/steps/stepsButtons/StepsButtons.tsx","pages/steps/StepsContainer.tsx","pages/steps/stepsHeader/StepFormAlert.tsx","pages/steps/stepsHeader/StepsHeaderNumber.tsx","pages/steps/stepsHeader/StepsHeaderText.tsx","pages/steps/stepsHeader/StepHeaderArrow.tsx","pages/steps/stepsHeader/StepsHeader.tsx","pages/steps/indexSteps/HttpRequestState.tsx","pages/steps/indexSteps/IndexSteps.tsx"],"sourcesContent":["import CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport InputsErrors from \"../../stepForm/stepFormInputs/InputsErrors\";\r\nimport { rwd } from \"../../../../utils/rwd\";\r\n\r\nconst StepClauseForm = () => {\r\n  const { formikClause } = useContext(StepsContext);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          height: rwd(\"74px\", \"72px\"),\r\n          pl: rwd(1.6, 0),\r\n          borderBottom: 1,\r\n          borderColor: \"info.light\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checkedIcon={\r\n                <CheckCircleOutlineIcon sx={{ color: \"info.dark\" }} />\r\n              }\r\n              icon={<RadioButtonUncheckedIcon />}\r\n              sx={{\r\n                \"&:hover\": { boxShadow: 2 },\r\n                color: formikClause.values.confirmation\r\n                  ? \"main.dark\"\r\n                  : \"primary.main\",\r\n              }}\r\n            />\r\n          }\r\n          name=\"confirmation\"\r\n          checked={formikClause.values.confirmation}\r\n          onChange={formikClause.handleChange}\r\n          label=\"Zapoznałem/-łam się z klauzulą informacyjną i wyrażam zgodę na przetwarzanie moich danych osobowych na zasadach i w celach w niej wskazanych\"\r\n          sx={{\r\n            \"& .MuiFormControlLabel-label\": {\r\n              color: formikClause.values.confirmation\r\n                ? \"main.dark\"\r\n                : \"primary.main\",\r\n              fontSize: theme => theme.typography.fs_12_rg,\r\n            },\r\n          }}\r\n        />\r\n        <Box\r\n          sx={{\r\n            ml: 3.2,\r\n            position: \"absolute\",\r\n            bottom: rwd(\"-11px\", \"-8px\", \"-1px\"),\r\n          }}\r\n        >\r\n          <InputsErrors formik={formikClause} value={\"confirmation\"} />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepClauseForm;\r\n","import { create } from \"zustand\";\r\n\r\ntype FormStore = {\r\n  isCaptcha: boolean;\r\n  setChaptcha: (isCaptcha: boolean) => void;\r\n};\r\n\r\nexport const useCaptchaStore = create<FormStore>(set => ({\r\n  isCaptcha: false,\r\n  setChaptcha: (isCaptcha) => {\r\n    set(state => ({ isCaptcha: isCaptcha }));\r\n  },\r\n}));\r\n","import Box from \"@mui/material/Box\";\r\nimport { useContext } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\nimport { useCaptchaStore } from \"../../../zustandStores/useCaptchaStore\";\r\n\r\nconst Captcha = () => {\r\n  const setChaptcha = useCaptchaStore((state: any) => state.setChaptcha);\r\n\r\n  // const { setIsCaptcha } = useContext(StepsContext);\r\n\r\n  const key = process.env.REACT_APP_reCaptchaKey;\r\n\r\n  const handleChange = () => {\r\n    setChaptcha(true);\r\n  };\r\n\r\n  if (!key) {\r\n    return <div>CAPTCHA nie istnieje.</div>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"absolute\",\r\n        right: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%)\",\r\n        bottom: rwd(\"120px\", \"90px\"),\r\n        display: \"flex\",\r\n        justifyContent: rwd(\"center\", \"end\"),\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          transform: \"scale(0.79)\",\r\n          mr: rwd(0, 0, -1.6),\r\n        }}\r\n      >\r\n        <ReCAPTCHA sitekey={key} onChange={handleChange} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Captcha;\r\n","import KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\nconst ButtonClauseSubmit = () => {\r\n  const { currentStepIdx, next, formikClause, isConfirmed } =\r\n    useContext(StepsContext);\r\n\r\n  const isErrorInClause = Object.values(formikClause.errors);\r\n\r\n  useEffect(() => {\r\n    if (isConfirmed && isErrorInClause.length === 0) next();\r\n  }, [isConfirmed]);\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 1 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={() => isConfirmed && isErrorInClause.length === 0 && next()}\r\n          endIcon={<KeyboardDoubleArrowRightOutlinedIcon />}\r\n          sx={{\r\n            width: rwd(\"65%\", \"12rem\"),\r\n            \"&:hover\": { bgcolor: \"#2455BA\" },\r\n          }}\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonClauseSubmit;\r\n","import KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\nconst ButtonFormSubmit = () => {\r\n  const { currentStepIdx, isSubmited, next, formik } = useContext(StepsContext);\r\n\r\n  const isError = Object.values(formik.errors);\r\n\r\n  useEffect(() => {\r\n    if (isSubmited && isError.length === 0) next();\r\n  }, [isSubmited]);\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            isSubmited && isError.length === 0 && next();\r\n          }}\r\n          endIcon={<KeyboardDoubleArrowRightOutlinedIcon />}\r\n          sx={{\r\n            width: rwd(\"65%\", \"12rem\"),\r\n            \"&:hover\": { bgcolor: \"#2455BA\" },\r\n            marginLeft: rwd(0, \"auto\"),\r\n          }}\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonFormSubmit;\r\n","import create from \"zustand\";\r\n\r\ntype HttpRequest = {\r\n  isLoading: boolean;\r\n  error: string | null | unknown;\r\n  sendRequest: (\r\n    requestConfig: any,\r\n    returnData: React.Dispatch<React.SetStateAction<boolean>>\r\n  ) => void;\r\n};\r\n\r\nconst useHttpRequestStore = create<HttpRequest>(set => ({\r\n  isLoading: false,\r\n  error: null,\r\n  sendRequest: async (\r\n    requestConfig: any,\r\n    returnData: React.Dispatch<React.SetStateAction<boolean>>\r\n  ) => {\r\n    set({ isLoading: true, error: null });\r\n\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method || \"GET\",\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw Error(\"Błąd. Ponów próbę\");\r\n      } else {\r\n        returnData(response.ok);\r\n        const responseData = await response.json();\r\n        return responseData;\r\n      }\r\n    } catch (err) {\r\n      set({ error: err });\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n}));\r\n\r\nexport default useHttpRequestStore;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Box } from \"@mui/material\";\r\nimport KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\nimport { URL } from \"../../../data/dataURL\";\r\nimport { currentDateInNumbers } from \"../../../utils/currentDateInNumbers\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\nimport KeyboardDoubleArrowUpIcon from \"@mui/icons-material/KeyboardDoubleArrowUp\";\r\nimport { keyframes } from \"@mui/system\";\r\nimport { useCaptchaStore } from \"../../../zustandStores/useCaptchaStore\";\r\nimport useHttpRequest from \"../../../services/useHttpRequest\";\r\nimport useHttpRequestStore from \"../../../zustandStores/useHttpStore\";\r\n\r\nconst arrowUp = keyframes`\r\n  0% {\r\n     transform: translateY(20%)\r\n  }\r\n  100% {\r\n   transform: translateY(-20%)\r\n  }\r\n`;\r\n\r\nconst ButtonPOSTvalues = () => {\r\n  const { formik, currentStepIdx, next } =\r\n    useContext(StepsContext);\r\n\r\n  const isCaptcha = useCaptchaStore((state) => state.isCaptcha);\r\n  const setChaptcha = useCaptchaStore((state) => state.setChaptcha);\r\n  const sendRequest = useHttpRequestStore(state => state.sendRequest);\r\n   \r\n\r\n  const [responseStatus, setResponseStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (responseStatus) next();\r\n  }, [responseStatus]);\r\n\r\n  useEffect(() => {\r\n    if (currentStepIdx !== 2) {\r\n      setChaptcha(false);\r\n    }\r\n  }, [currentStepIdx]);\r\n\r\n  const handlePOST = () => {\r\n    if (currentStepIdx === 2) {\r\n      sendRequest(\r\n        {\r\n          url: URL,\r\n          body: {\r\n            member: { ...formik.values, submitDate: currentDateInNumbers() },\r\n          },\r\n          method: \"POST\",\r\n        },\r\n        setResponseStatus\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 2 && (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              currentStepIdx < 2 && next();\r\n              isCaptcha && handlePOST();\r\n              //  handlePOST();\r\n            }}\r\n            endIcon={\r\n              isCaptcha ? (\r\n                <KeyboardDoubleArrowRightOutlinedIcon />\r\n              ) : (\r\n                <KeyboardDoubleArrowUpIcon\r\n                  sx={{\r\n                    animation: `${arrowUp} 0.8s ease-in-out infinite alternate`,\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n            sx={{\r\n              width: rwd(\"65%\", \"12rem\"),\r\n              \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n            }}\r\n          >\r\n            {isCaptcha ? \"Wyślij\" : \"ZAZNACZ CAPTCHA\"}\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonPOSTvalues;\r\n","export const URL = process.env.REACT_APP_POSTurl;\r\n\r\n","import KeyboardDoubleArrowLeftOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowLeftOutlined\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\nconst ButtonReturn = () => {\r\n  const { currentStepIdx, back } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      {currentStepIdx > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<KeyboardDoubleArrowLeftOutlinedIcon />}\r\n          onClick={() => back()}\r\n          sx={{\r\n            height: \"fit-content\",\r\n            width: rwd(\"65%\", \"12rem\"),\r\n            \"&:hover\": { bgcolor: \"#2455BA\" },\r\n            mt: rwd(1, 0),\r\n          }}\r\n        >\r\n          Wróć\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonReturn;\r\n","import Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport StepClauseForm from \"../stepClause/stepClauseForm/StepClauseForm\";\r\nimport Captcha from \"../stepSummary/Captcha\";\r\nimport ButtonClauseSubmit from \"./ButtonClauseSubmit\";\r\nimport ButtonFormSubmit from \"./ButtonFormSubmit\";\r\nimport ButtonPOSTvalues from \"./ButtonPOSTvalues\";\r\nimport ButtonReturn from \"./ButtonReturn\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\nconst StepsButtons = () => {\r\n  const { currentStepIdx } = useContext(StepsContext);\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        px: rwd(\"20px !importand\", \"20px !importand\", \"16px !important\"),\r\n        bgcolor: \"white\",\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      {currentStepIdx === 1 && <StepClauseForm />}\r\n      {currentStepIdx === 2 && <Captcha />}\r\n\r\n      <Box\r\n        sx={{\r\n          height: rwd(\"120px\", \"90px\"),\r\n          display: \"flex\",\r\n          flexDirection: rwd(\"column-reverse\", \"row\"),\r\n          justifyContent: rwd(\"center\", \"space-between\"),\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ButtonReturn />\r\n        <ButtonFormSubmit />\r\n        <ButtonClauseSubmit />\r\n        <ButtonPOSTvalues />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StepsButtons;\r\n","import Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { rwd } from \"../../utils/rwd\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport StepConfirmation from \"./stepConfirmation/StepConfirmation\";\r\nimport StepsButtons from \"./stepsButtons/StepsButtons\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\n\r\nconst StepsContainer = () => {\r\n  const { steps, currentStepIdx, formik, formikClause, isLastStep } =\r\n    useContext(StepsContext);\r\n  // const { count, name, changeName, increment, decrement } = useFormStore(\r\n  //   (state: any) => state\r\n  // );\r\n\r\n  // console.log(\"\", name);\r\n\r\n  const scrollBoxRefs = [\r\n    useRef<HTMLElement | null>(null),\r\n    useRef<HTMLElement | null>(null),\r\n    useRef<HTMLElement | null>(null),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    scrollBoxRefs.forEach(scrollBoxRef => {\r\n      if (scrollBoxRef.current) {\r\n        scrollBoxRef.current.scrollTop = 0;\r\n      }\r\n    });\r\n  }, [currentStepIdx]);\r\n\r\n  const formSubmit =\r\n    currentStepIdx === 0 ? formik.handleSubmit : formikClause.handleSubmit;\r\n\r\n  const height =\r\n    currentStepIdx === 0\r\n      ? rwd(\"calc(100% - 120px)\", \"calc(100% - 90px)\")\r\n      : rwd(\"calc(100% - 120px - 74px)\", \"calc(100% - 90px - 72px)\");\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        height: rwd(\"calc(100vh - 56px)\", \"calc(100vh - 92px)\"),\r\n        mt: rwd(\"56px\", \"92px\"),\r\n        padding: \"0px !important\",\r\n      }}\r\n    >\r\n\r\n\r\n      {currentStepIdx < 3 && (\r\n        <form\r\n          onSubmit={formSubmit}\r\n          style={{\r\n            height: \"100%\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              height,\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(3, 100%)\",\r\n              transform: `translate(-${currentStepIdx}00%)`,\r\n              transition: \"transform 0.5s ease\",\r\n            }}\r\n          >\r\n            {steps.slice(0, -1).map((step, idx) => {\r\n              return (\r\n                <Box\r\n                  key={idx}\r\n                  ref={scrollBoxRefs[idx]}\r\n                  sx={{\r\n                    overflowY: \"auto\",\r\n                    px: 1.6,\r\n                  }}\r\n                >\r\n                  {step}\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n          {!isLastStep && <StepsButtons />}\r\n        </form>\r\n      )}\r\n\r\n      {isLastStep && <StepConfirmation />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StepsContainer;\r\n","import Alert from \"@mui/material/Alert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\n\r\nconst StepFormAlert = () => {\r\n  const { formik } = useContext(StepsContext);\r\n  const isError = Object.values(formik.errors);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: \"1200px\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: \"50%\",\r\n        right: \"50%\",\r\n        transform:\r\n          isError.length > 0\r\n            ? \"translate(-50%)\"\r\n            : \"translate(-50%, -100%)\",\r\n        transition: \"0.5s\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        bgcolor: \"rgb(253, 237, 237)\",\r\n        zIndex: 3,\r\n      }}\r\n    >\r\n      <Alert\r\n        severity=\"error\"\r\n        sx={{\r\n          height: \"fit-content\",\r\n        }}\r\n      >\r\n        Wypełnij pola formularza\r\n      </Alert>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StepFormAlert;\r\n","import Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst StepsHeaderNumber = (props: Props) => {\r\n  const { currentStepIdx } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: rwd(\"20px\", \"30px\"),\r\n          height: rwd(\"20px\", \"30px\"),\r\n          border: 1,\r\n          borderRadius: \"100%\",\r\n          display: \"grid\",\r\n          placeItems: \"center\",\r\n          backgroundColor:\r\n            currentStepIdx >= props.idx ? \"primary.main\" : \"transparent\",\r\n          color: currentStepIdx >= props.idx ? \"white\" : \"info.main\",\r\n        }}\r\n      >\r\n        <Typography variant=\"fs_14_sb\" color=\"info\">\r\n          {props.idx + 1}\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepsHeaderNumber;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\ntype Props = {\r\n  text: string;\r\n};\r\n\r\nconst StepsHeaderText = (props: Props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"fs_12_sb\"\r\n      color=\"info.dark\"\r\n      component=\"p\"\r\n      sx={{\r\n        width: rwd(\"100%\", \"100%\", \"fit-content\"),\r\n        position: rwd(\"absolute\", \"absolute\", \"unset\"),\r\n        top: rwd(\"22px\", \"32px\"),\r\n        left: \"-27px\",\r\n        textAlign: \"center\",\r\n        ml: rwd(0,0, 1.3),\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StepsHeaderText;\r\n","import ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n  array: string[];\r\n};\r\n\r\nconst StepHeaderArrow = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.idx < props.array.length - 1 && (\r\n        <ArrowForwardIosIcon\r\n          color=\"secondary\"\r\n          sx={{\r\n            mx: \"21px\",\r\n            fontSize: rwd(\"0.8rem\", \"small\"),\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepHeaderArrow;\r\n","import Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\nimport StepFormAlert from \"./StepFormAlert\";\r\nimport StepsHeaderNumber from \"./StepsHeaderNumber\";\r\nimport StepsHeaderText from \"./StepsHeaderText\";\r\nimport StepHeaderArrow from \"./StepHeaderArrow\";\r\nimport { memo } from \"react\";\r\n\r\nconst StepsHeader = memo(() => {\r\n  const dataSteps = [\"Formularz\", \"Klauzula\", \"Wysyłka\", \"Potwierdzenie\"];\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        height: rwd(\"56px\", \"92px\"),\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: \"50%\",\r\n        transform: \"translate(-50%)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        pl: \"16px !important\",\r\n        bgcolor: \"white\",\r\n        zIndex: 2,\r\n        scrollbarGutter: \"stable\",\r\n      }}\r\n    >\r\n      <StepFormAlert />\r\n      <Box\r\n        sx={{\r\n          width: \"fit-content\",\r\n          mx: rwd(\"auto\", \"auto\", \"0\"),\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          mb: rwd(1.3, 1.3, 0),\r\n        }}\r\n      >\r\n        {dataSteps.map((text, idx, arr) => {\r\n          return (\r\n            <Box\r\n              key={text}\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <StepsHeaderNumber idx={idx} />\r\n              <StepsHeaderText text={text} />\r\n              <StepHeaderArrow idx={idx} array={arr} />\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default StepsHeader;\r\n","import Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { rwd } from \"../../../utils/rwd\";\r\nimport useHttpRequestStore from \"../../../zustandStores/useHttpStore\";\r\n\r\nconst BoxStylesBackground = {\r\n  position: \"absolute\",\r\n  height: rwd(\"calc(100vh - 56px)\", \"calc(100vh - 92px)\"),\r\n  width: \"100%\",\r\n  bgcolor: \"white\",\r\n  opacity: \"0.9\",\r\n  zIndex: 3,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst BoxStylesContent = {\r\n  position: \"absolute\",\r\n  left: \"50%\",\r\n  top: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  minWidth: \"300px\",\r\n  textAlign: \"center\",\r\n  color: \"red\",\r\n  zIndex: 4,\r\n};\r\n\r\nconst HttpRequestState = () => {\r\n  // const { error } = useContext(StepsContext);\r\n\r\n  const isLoading = useHttpRequestStore(state => state.isLoading);\r\n  const error = useHttpRequestStore(state => state.error);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Box sx={BoxStylesBackground}></Box>\r\n        <Box sx={BoxStylesContent}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <>\r\n        <Box sx={BoxStylesBackground}></Box>\r\n        <Box sx={BoxStylesContent}>\r\n          <Typography variant={\"fs_12_rg\"} component={\"p\"}>\r\n            Błąd. Ponów próbę\r\n          </Typography>\r\n        </Box>\r\n      </>\r\n    );\r\n  } else return <></>;\r\n};\r\n\r\nexport default HttpRequestState;\r\n","import StepsContainer from \"../StepsContainer\";\r\nimport StepsHeader from \"../stepsHeader/StepsHeader\";\r\nimport HttpRequestState from \"./HttpRequestState\";\r\n\r\nconst IndexSteps = () => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <StepsHeader />\r\n      </header>\r\n      <main>\r\n        <HttpRequestState />\r\n        <StepsContainer />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexSteps;\r\n"],"names":["formikClause","useContext","StepsContext","_jsx","_Fragment","children","_jsxs","Box","sx","height","rwd","pl","borderBottom","borderColor","position","display","alignItems","FormControlLabel","control","Checkbox","checkedIcon","CheckCircleOutlineIcon","color","icon","RadioButtonUncheckedIcon","boxShadow","values","confirmation","name","checked","onChange","handleChange","label","fontSize","theme","typography","fs_12_rg","ml","bottom","InputsErrors","formik","value","useCaptchaStore","create","set","isCaptcha","setChaptcha","state","key","process","right","left","transform","justifyContent","width","backgroundColor","mr","ReCAPTCHA","sitekey","_useContext","currentStepIdx","next","isConfirmed","isErrorInClause","Object","errors","useEffect","length","Button","variant","type","onClick","endIcon","KeyboardDoubleArrowRightOutlinedIcon","bgcolor","isSubmited","isError","marginLeft","useHttpRequestStore","isLoading","error","sendRequest","_sendRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestConfig","returnData","response","responseData","wrap","_context","prev","fetch","url","method","body","JSON","stringify","headers","Accept","sent","ok","Error","json","abrupt","t0","finish","stop","_x","_x2","apply","arguments","arrowUp","keyframes","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","responseStatus","setResponseStatus","member","_objectSpread","submitDate","currentDateInNumbers","KeyboardDoubleArrowUpIcon","animation","concat","back","startIcon","KeyboardDoubleArrowLeftOutlinedIcon","mt","Container","flexDirection","px","zIndex","StepClauseForm","Captcha","ButtonReturn","ButtonFormSubmit","ButtonClauseSubmit","ButtonPOSTvalues","steps","isLastStep","scrollBoxRefs","useRef","forEach","scrollBoxRef","current","scrollTop","formSubmit","handleSubmit","padding","onSubmit","style","overflow","gridTemplateColumns","transition","slice","map","step","idx","ref","overflowY","StepsButtons","StepConfirmation","maxWidth","top","placeItems","Alert","severity","props","border","borderRadius","Typography","component","textAlign","text","array","ArrowForwardIosIcon","mx","memo","scrollbarGutter","StepFormAlert","mb","arr","StepsHeaderNumber","StepsHeaderText","StepHeaderArrow","BoxStylesBackground","opacity","BoxStylesContent","minWidth","CircularProgress","StepsHeader","HttpRequestState","StepsContainer"],"sourceRoot":""}