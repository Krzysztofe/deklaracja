{"version":3,"file":"static/js/619.b5379748.chunk.js","mappings":"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","sources":["pages/steps/stepsButtons/ButtonClauseSumit.tsx","pages/steps/stepsButtons/ButtonFormSubmit.tsx","pages/steps/stepsButtons/ButtonPOSTvalues.tsx","data/dataURL.tsx","pages/steps/stepsButtons/ButtonReturn.tsx","pages/steps/stepsButtons/StepsButtons.tsx","pages/steps/stepsHeader/StepsHeaderNumber.tsx","pages/steps/stepsHeader/StepsHeaderText.tsx","hooks/useWindowWidth.tsx","pages/steps/stepsHeader/StepsHeader.tsx","pages/steps/stepClause/stepClauseForm/StepClauseForm.tsx","pages/steps/stepSummary/Captcha.tsx","pages/steps/indexSteps/IndexSteps.tsx"],"sourcesContent":["import KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\n\r\nconst ButtonClauseSumit = () => {\r\n  const { currentStepIdx, next, formikClause, isConfirmed } =\r\n    useContext(StepsContext);\r\n\r\n  const isErrorInClause = Object.values(formikClause.errors);\r\n\r\n  useEffect(() => {\r\n    if (isConfirmed && isErrorInClause.length === 0) next();\r\n  }, [isConfirmed]);\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 1 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          endIcon={<KeyboardDoubleArrowRightOutlinedIcon />}\r\n          onClick={() => {\r\n            isConfirmed && isErrorInClause.length === 0 && next();\r\n          }}\r\n          sx={{\r\n            width: { xs: \"65%\", sm: \"15rem\" },\r\n            \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n          }}\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonClauseSumit;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\n\r\nconst ButtonFormSubmit = () => {\r\n  const {\r\n    currentStepIdx,\r\n    isSubmited,\r\n    next,\r\n    formik,\r\n  } = useContext(StepsContext);\r\n\r\n  const isError = Object.values(formik.errors);\r\n\r\n  useEffect(() => {\r\n    if (isSubmited && isError.length === 0) next();\r\n  }, [isSubmited]);\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          endIcon={<KeyboardDoubleArrowRightOutlinedIcon />}\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            isSubmited && isError.length === 0 && next();\r\n          }}\r\n          sx={{\r\n            width: { xs: \"65%\", sm: \"15rem\" },\r\n            \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n            marginLeft: { xs: 0, sm: \"auto\" },\r\n          }}\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonFormSubmit;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardDoubleArrowRightOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowRightOutlined\";\r\nimport { URL } from \"../../../data/dataURL\";\r\n\r\nconst ButtonPOSTvalues = () => {\r\n  const { formik, sendRequest, isCaptcha, setIsCaptcha, currentStepIdx, next } =\r\n    useContext(StepsContext);\r\n\r\n  const [responseStatus, setResponseStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (responseStatus) next();\r\n  }, [responseStatus]);\r\n\r\n  useEffect(() => {\r\n    if (currentStepIdx !== 2) {\r\n      setIsCaptcha(false);\r\n    }\r\n  }, [currentStepIdx]);\r\n\r\n  const handlePOST = () => {\r\n    if (currentStepIdx === 2) {\r\n      sendRequest(\r\n        {\r\n          url: URL,\r\n          body: { member: formik.values },\r\n          method: \"POST\",\r\n        },\r\n        setResponseStatus\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentStepIdx === 2 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          endIcon={isCaptcha && <KeyboardDoubleArrowRightOutlinedIcon />}\r\n          onClick={() => {\r\n            currentStepIdx < 2 && next();\r\n            isCaptcha && handlePOST();\r\n            // handlePOST();\r\n          }}\r\n          sx={{\r\n            width: { xs: \"65%\", sm: \"15rem\" },\r\n            \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n          }}\r\n        >\r\n          {isCaptcha ? \"Wyślij\" : \"ZAZNACZ CAPTCHA\"}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonPOSTvalues;\r\n","export const URL = process.env.REACT_APP_POSTurl;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport KeyboardDoubleArrowLeftOutlinedIcon from \"@mui/icons-material/KeyboardDoubleArrowLeftOutlined\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ButtonReturn = () => {\r\n  const { currentStepIdx, back } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      {currentStepIdx > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<KeyboardDoubleArrowLeftOutlinedIcon />}\r\n          onClick={() => back()}\r\n          sx={{\r\n            width: { xs: \"65%\", sm: \"15rem\" },\r\n            \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n          }}\r\n        >\r\n          Wstecz\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonReturn;\r\n","import Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { styled } from \"@mui/system\";\r\nimport ButtonClauseSumit from \"./ButtonClauseSumit\";\r\nimport ButtonFormSubmit from \"./ButtonFormSubmit\";\r\nimport ButtonPOSTvalues from \"./ButtonPOSTvalues\";\r\nimport ButtonReturn from \"./ButtonReturn\";\r\n\r\nconst StepsButtons = () => {\r\n  const buttonStyles = styled(Button)({\r\n    width: \"35%\",\r\n    p: \"0.3em\",\r\n    marginLeft: \"auto\",\r\n    \"&:hover\": { backgroundColor: \"#2455BA\" },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: { xs: \"column-reverse\", sm: \"row\" },\r\n          justifyContent: { xs: \"center\", sm: \"space-between\" },\r\n          alignItems: \"center\",\r\n          gap: 2,\r\n          paddingBlock: 2,\r\n          marginTop: \"auto\",\r\n        }}\r\n      >\r\n        <ButtonReturn />\r\n        <ButtonFormSubmit />\r\n        <ButtonClauseSumit />\r\n        <ButtonPOSTvalues/>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepsButtons;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n  idx: number;\r\n}\r\n\r\nconst StepsHeaderNumber = (props: Props) => {\r\n  const { currentStepIdx } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: { xs: \"1.25rem\", sm: \"2rem\" },\r\n          aspectRatio: \"1/1\",\r\n          border: 1,\r\n          borderRadius: \"100%\",\r\n          display: \"grid\",\r\n          placeItems: \"center\",\r\n          backgroundColor:\r\n            currentStepIdx >= props.idx ? \"primary.main\" : \"transparent\",\r\n          color: currentStepIdx >= props.idx ? \"white\" : \"info.main\",\r\n        }}\r\n      >\r\n        <Typography variant=\"fs_14_sb\" color=\"info\">\r\n          {props.idx + 1}\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepsHeaderNumber;\r\n","import Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n  text: string;\r\n}\r\n\r\nconst StepsHeaderText = (props: Props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"fs_12_sb\"\r\n      color=\"info.dark\"\r\n      sx={{\r\n        marginInline: 1,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StepsHeaderText;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport Box from \"@mui/material/Box\";\r\nimport StepsHeaderNumber from \"./StepsHeaderNumber\";\r\nimport StepsHeaderText from \"./StepsHeaderText\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\n\r\nconst StepsHeader = () => {\r\n  const { steps, currentStepIdx, step, formik, formikClause } =\r\n    useContext(StepsContext);\r\n\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  const dataSteps = [\"Formulaż\", \"Klauzula\", \"Podsumowanie\", \"Potwierdzenie\"];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n        gap: 1,\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      {dataSteps.map((text, idx, arr) => {\r\n        return (\r\n          <Box key={text}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                // width: { xs: \"48%\", md: \"auto\" },\r\n              }}\r\n            >\r\n              <StepsHeaderNumber idx={idx} />\r\n              {windowWidth > 900 && <StepsHeaderText text={text} />}\r\n              {idx < arr.length - 1 && (\r\n                <ArrowForwardIosIcon\r\n                  color=\"secondary\"\r\n                  sx={{\r\n                    marginRight: { sm: \"1rem\" },\r\n                    marginLeft: { xs: \"0\", sm: \"auto\" },\r\n                    fontSize: { xs: \"0.8rem\", sm: \"small\" },\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                position: \"absolute\",\r\n                bottom: \"-70%\",\r\n                left: \"-3%\",\r\n              }}\r\n            >\r\n              {windowWidth < 900 && idx === currentStepIdx && (\r\n                <StepsHeaderText text={text} />\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StepsHeader;\r\n","import Box from \"@mui/material/Box\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport InputsErrors from \"../../stepForm/stepFormInputs/InputsErrors\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\n\r\nconst StepClauseForm = () => {\r\n  const { formikClause } = useContext(StepsContext);\r\n\r\n  const StyledLabel = styled(FormControlLabel)(({ theme }) => ({\r\n    color: \"green\",\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        sx={{\r\n          paddingBlock: 1.5,\r\n          borderBottom: 1,\r\n          borderColor: \"info.light\",\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checkedIcon={<CheckCircleOutlineIcon />}\r\n              icon={<HighlightOffIcon />}\r\n              sx={{ \"&:hover\": { boxShadow: 2 } }}\r\n            />\r\n          }\r\n          name=\"confirmation\"\r\n          checked={formikClause.values.confirmation}\r\n          onChange={formikClause.handleChange}\r\n          label=\"Zapoznałem się z klauzulą informacyjną i wyrażam zgodę na przetważanie moich danych osobowych na zasadach i w celach w niej wskazanych\"\r\n          sx={{\r\n            \"& .MuiFormControlLabel-label\": {\r\n              color: formikClause.values.confirmation\r\n                ? \"primary.main\"\r\n                : \"main.dark\",\r\n              fontSize: theme => theme.typography.fs_12_rg,\r\n            },\r\n          }}\r\n        />\r\n        <Box sx={{ ml: 3.2, position: \"absolute\" }}>\r\n          <InputsErrors\r\n            formik={formikClause}\r\n            value={\"confirmation\"}\r\n            otherValue={null}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepClauseForm;\r\n","import { useContext } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nconst Captcha = () => {\r\n  const { setIsCaptcha } = useContext(StepsContext);\r\n\r\n  const key = process.env.REACT_APP_reCaptchaKey;\r\n\r\n  const handleChange = () => {\r\n    setIsCaptcha(true);\r\n  };\r\n\r\n  if (!key) {\r\n    return <div>CAPTCHA nie istnieje.</div>;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: { xs: \"center\", sm: \"end\" },\r\n      \r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: { xs: \"425px\", sm: \"16px\" },\r\n          transform: \"scale(0.79)\",\r\n          display: \"flex\",\r\n          justifyContent: { xs: \"center\", sm: \"end\" },\r\n          marginBottom: \"-30px\"\r\n        }}\r\n      >\r\n        <ReCAPTCHA sitekey={key} onChange={handleChange} />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Captcha;\r\n","import Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport StepsButtons from \"../stepsButtons/StepsButtons\";\r\nimport StepsHeader from \"../stepsHeader/StepsHeader\";\r\nimport StepClauseForm from \"../stepClause/stepClauseForm/StepClauseForm\";\r\nimport Captcha from \"../stepSummary/Captcha\";\r\n\r\nconst IndexSteps = () => {\r\n  const { steps, currentStepIdx, step, formik, formikClause } =\r\n    useContext(StepsContext);\r\n\r\n  const scrollBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (scrollBoxRef.current) {\r\n      (scrollBoxRef.current as HTMLDivElement).scrollTop = 0;\r\n    }\r\n  }, [currentStepIdx]);\r\n\r\n  const formSubmit =\r\n    currentStepIdx === 0 ? formik.handleSubmit : formikClause.handleSubmit;\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Container\r\n          sx={{\r\n            height: \"10vh\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <StepsHeader />\r\n        </Container>\r\n      </header>\r\n      <main>\r\n        <Container\r\n          sx={{\r\n            height: \"90vh\",\r\n            padding: \"0px !important\",\r\n          }}\r\n        >\r\n          <form\r\n            onSubmit={formSubmit}\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Box\r\n              ref={scrollBoxRef}\r\n              sx={{ paddingInline: 1.6, overflowY: \"scroll\" }}\r\n            >\r\n              {step}\r\n            </Box>\r\n            {currentStepIdx === 1 && <StepClauseForm />}\r\n            {currentStepIdx === 2 && <Captcha />}\r\n            {currentStepIdx < steps.length - 1 && <StepsButtons />}\r\n          </form>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexSteps;\r\n"],"names":["_useContext","useContext","StepsContext","currentStepIdx","next","formikClause","isConfirmed","isErrorInClause","Object","values","errors","useEffect","length","_jsx","_Fragment","children","Button","variant","type","endIcon","KeyboardDoubleArrowRightOutlinedIcon","onClick","sx","width","xs","sm","backgroundColor","isSubmited","formik","isError","marginLeft","sendRequest","isCaptcha","setIsCaptcha","_useState","useState","_useState2","_slicedToArray","responseStatus","setResponseStatus","url","process","body","member","method","back","startIcon","KeyboardDoubleArrowLeftOutlinedIcon","styled","p","_jsxs","Container","display","flexDirection","justifyContent","alignItems","gap","paddingBlock","marginTop","ButtonReturn","ButtonFormSubmit","ButtonClauseSumit","ButtonPOSTvalues","props","Box","aspectRatio","border","borderRadius","placeItems","idx","color","Typography","marginInline","text","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","steps","step","useWindowWidth","flexWrap","position","map","arr","StepsHeaderNumber","StepsHeaderText","ArrowForwardIosIcon","marginRight","fontSize","bottom","left","FormControlLabel","_ref","theme","borderBottom","borderColor","control","Checkbox","checkedIcon","CheckCircleOutlineIcon","icon","HighlightOffIcon","boxShadow","name","checked","confirmation","onChange","handleChange","label","typography","fs_12_rg","ml","InputsErrors","value","otherValue","key","transform","marginBottom","ReCAPTCHA","sitekey","scrollBoxRef","useRef","current","scrollTop","formSubmit","handleSubmit","height","StepsHeader","padding","onSubmit","style","ref","paddingInline","overflowY","StepClauseForm","Captcha","StepsButtons"],"sourceRoot":""}