{"version":3,"file":"static/js/984.168f2fa0.chunk.js","mappings":"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","sources":["pages/steps/StepDateInfo.tsx","pages/steps/stepGeneralInfo/dataStepGeneralInfo.tsx","pages/steps/stepGeneralInfo/StepGeneralnfo.tsx","pages/steps/StepsHeader.tsx","pages/steps/FormHeader.tsx","pages/steps/stepForm/stepFormInputs/StepFormEployer.tsx","pages/steps/stepForm/stepFormInputs/StepFormTopInputs.tsx","pages/steps/stepForm/stepFormInputs/StepInputsWorkplace.tsx","pages/steps/stepForm/stepFormInputs/StepInputsConstract.tsx","pages/steps/stepForm/stepFormInputs/StepInputsWorktime.tsx","pages/steps/stepForm/stepFormInputs/StepInputsDepartment.tsx","pages/steps/stepForm/stepFormInputs/StepInputsMembership.tsx","pages/steps/stepForm/StepForm.tsx","pages/steps/useMultistepForm.tsx","pages/steps/StepSummary.tsx","pages/steps/StepsButtons.tsx","pages/steps/IndexSteps.tsx"],"sourcesContent":["import Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepDateInfo = () => {\r\n  return (\r\n    <Card>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        KONTAKT: tel.\r\n        <br /> 736-850-536 <br />\r\n        ipamazon@wp.pl <br />\r\n        www.ozzip.p\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Facebook: <br /> OZZ Inicjatywa Pracownicza Amazon <br /> INFORMACJA O\r\n        DACIE PRZYJĘCIA DO ZWIĄZKU\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ p: 1 }}>\r\n        Jeżeli nasza Komisja nie postanowi inaczej, datą przyjęcia Ciebie do\r\n        związku będzie: <br />\r\n        1) ostatni dzień miesiąca, w którym oświadczenie to zostało doręczone:{\" \"}\r\n        <br />\r\n        a) członkowi prezydium organizacji podstawowej Związku (również poprzed\r\n        odebranie ze skrzynki pocztowej na tablicy związkowej) <br /> b)\r\n        bezpośrednio osobie działającej z upoważnienia prezydium Komisji <br />\r\n        c) na ujawniony w KRS adres Związku (aktualnie: ul. Kościelna 4/1a,\r\n        60-538 Poznań)\r\n        <br /> 2) dzień, w którym po otrzymaniu tego oświadczenia prezydium\r\n        Komisji podjęło się Twojej obrony wobec podmiotu zatrudniającego (w tym\r\n        pracodawcy). <br />\r\n        Powyższe wynika z Uchwały nr 60/5/2018 Komisji Krajowej OZZIP z\r\n        28.10.2018 r\r\n      </Typography>\r\n\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        JEŚLI PODAŁAŚ/PODAŁEŚ E-MAIL, OTRZYMASZ DROGĄ E-MAIL POTWIERDZENIE\r\n        ZAPISANIA DO ZWIĄZKU ORAZ DODANIA DO LISTY DYSKUSYJNEJ.\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StepDateInfo;\r\n","export const dataGeneralInfoParagraphs = [\r\n  \"Przetwarzanie danych osobowych odbywać się będzie w celu:\",\r\n  \" • wykonywania celów statutowych,\",\r\n  \" • realizowania wymagań wynikających z przepisów prawa, w szczególności zaś w Ustawie z dnia 23 maja 1991 r. o związkach zawodowych\",\r\n  \" • dołączenia członka/członkini do listy mailingowej lub innego  elektronicznego komunikatora umożli- wiającego wysyłanie lub odbiór      informacji między członkami OZZIP, używanego w celach związanych ze      statutową działalnością OZZIP.\",\r\n  \" Uprawnionymi do zbierania i przetwarzania danych osobowych w wyżej wskazanym celu są członkow- ie Komisji Krajowej OZZIP, członkowie prezydiów podstawowych jednostek organizacyjnych związku albo przedstawiciele związku działający z up- oważnienia wyżej wskazanych organów.\", \"OZZIP nie przekazuje pracodawcom lub innym podmiotom zatrudniającym zbiorczych list swoich członków. Jeżeli jednak pracodawca lub inny podmi- ot zatrudniający wystąpi z prośbą o przedstawienie informacji czy zamierzamy Ciebie reprezentować (np. w związku z zamiarem wypowiedzenia umowy) podejmiemy się Twojej obrony i niezwłocznie Cię o tym poinformujemy, korzystając z podanych przez Ciebie w tej deklaracji danych kontaktowych.\", \"Okres przetwarzania danych osobowych rozpocznie się od chwili doręczenia przedstawicielowi OZZIP niniejszego podpisanego oświadczenia i będzie tr- wał przez okres niezbędny do realizacji celów stat- utowych    OZZIP.\", \"Zgoda na przetwarzanie danych osobowych ob- jętych deklaracją  przystąpienia do związku zawodowego OZZIP w zakresie imienia i nazwiska,      podmiotu zatrudniającego, podstawy zatrudnie- nia, długości zatrudnienia w odniesieniu do osoby wykonującej pracę zarobkową niebędącej pracownikiem w rozumieniu KP, oraz wymiaru czasu pracy (w odniesieniu do wszystkich wykonujących pracę zarobkową) jest warunkiem niezbędnym członkostwa w  OZZIP. Wycofanie zgody na ich przetwarza- nie jest równoznaczne z wystąpieniem ze związku, niemniej nie powoduje ono zaprzestania przetwarzania tych danych w zakresie niezbędnym dla realizowania wymagań wynikających z przepisów prawa lub ochrony słusznych interesów administratora danych.\", \"W razie pytań prosimy o kontakt z Inspektorem Ochrony Danych Osobowych w OZZIP: Jarosław Urbański (tel: 663-633-504, email: rzecznikochrony danychosobowych@ozzip.pl).\", \" OZZIP będzie przetwarzać dane osobowe na  podstawie rozporządzenia Parlamentu Europejskie- go i Rady (UE) 2016/679 z dnia 27 kwietnia 2016 r. w sprawie ochrony osób fizycznych w związku z przetwarzaniem danych osobowych i w sprawie swobodnego przepływu takich danych oraz uchyl- enia dyrektywy 95/46/WE.\", \"Każdej osobie, której dane osobowe są przetwarzane przez OZZIP przysługuje prawo do ich: weryfikacji, kontroli, aktualizacji, korekty, uzyskania informacji na temat metody, w jaki sposób są przechowywane, funkcji, a także odwołania od dalszego ich przet- warzania. W celu realizacji tych  uprawnień prosimy o kontakt na ipamazon@wp.pl, tel. 736-850-536.\", \"W momencie, gdy którakolwiek z podanych infor- macji zmieni się, prosimy o kontakt w celu uaktu- alnienia ewidencji. Dane osobowe będą pozyski- wane wyłącznie na podstawie niniejszej deklaracji oraz oświadczeń mających na celu zmianę lub ko- rektę tych danych. Przekazanie danych osobowych w inny sposób będzie wymagało odrębnej zgody na ich przetwarzanie.\"\r\n];\r\n","import Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { dataGeneralInfoParagraphs } from \"./dataStepGeneralInfo\";\r\n\r\nconst StepGeneralnfo = () => {\r\n  return (\r\n    <Card>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        KLAUZULA INFORMACYNA\r\n      </Typography>\r\n      {dataGeneralInfoParagraphs.map(paragraph => {\r\n        return (\r\n          <Typography variant=\"body2\" sx={{ p: 0.5 }}>\r\n            {paragraph}\r\n          </Typography>\r\n        );\r\n      })}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StepGeneralnfo;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n  steps: JSX.Element[];\r\n  currentStepIdx: number;\r\n}\r\n\r\nconst StepsHeader = (props: Props) => {\r\n  return (\r\n    <header className=\"wrapper wrapper--formReactionHeader \">\r\n      <Typography>\r\n        Krok {props.currentStepIdx + 1}/{props.steps.length}\r\n      </Typography>\r\n     \r\n    </header>\r\n  );\r\n};\r\n\r\nexport default StepsHeader;\r\n","import Typography from \"@mui/material/Typography\";\r\n\r\nconst FormHeader = () => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Deklaracja przystąpienia do <br /> Ogólnopolskiego <br /> Związku\r\n        Zawodowego „Inicjatywa Pracownicza”\r\n      </Typography>\r\n\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        DEKLARACJA <br />\r\n        Ja, niżej podpisany/podpisana oświadczam, iż przystępuję do\r\n        Ogólnopolskiego Związku Zawodowego „Inicjatywa Pracownicza” z siedzibą w\r\n        Poznaniu (KRS nr 0000215247).\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormHeader;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepFormEployer = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const handleEmployerChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ employer: \"\", employerOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"employerOther\", \"\");\r\n    }\r\n  };\r\n\r\n  const handleLoginChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ employer: \"\", employerOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"employer\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Pracodawca:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"employer\"\r\n        value={formik.values.employer}\r\n        onChange={handleEmployerChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Amazon\", \"Adecco\", \"Randstad\"].map(employer => {\r\n          return (\r\n            <FormControlLabel\r\n              key={employer}\r\n              value={employer}\r\n              control={<Radio />}\r\n              label={employer}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n      <TextField\r\n        type={\"text\"}\r\n        name={\"employerOther\"}\r\n        label={\"Inny\"}\r\n        value={formik.values.employerOther}\r\n        onChange={handleLoginChange}\r\n        onBlur={formik.handleBlur}\r\n        size=\"small\"\r\n      />\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.employer || formik.touched.employerOther) &&\r\n          formik.errors.employer && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.employer}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepFormEployer;\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\n\r\nconst StepFormTopInputs = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const dataTextInputs = [\r\n    { label: \"Imię\", value: \"name\", type: \"text\" },\r\n    { label: \"Nazwisko\", value: \"surname\", type: \"text\" },\r\n    { label: \"Aders\", value: \"adress\", type: \"text\" },\r\n    { label: \"Telefon\", value: \"phone\", type: \"tel\" },\r\n    { label: \"E-mail\", value: \"email\", type: \"email\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {dataTextInputs.map(({ label, value, type }) => {\r\n        return (\r\n          <FormGroup key={label}>\r\n            <TextField\r\n              key={label}\r\n              type={type}\r\n              id={value}\r\n              name={value}\r\n              label={label}\r\n        \r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"small\"\r\n            />\r\n            <Typography variant=\"body1\">\r\n              {formik.touched[value as keyof typeof formik.touched] &&\r\n                formik.errors[value as keyof typeof formik.errors] && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors[value as keyof typeof formik.errors]}\r\n                  </span>\r\n                )}\r\n            </Typography>\r\n          </FormGroup>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepFormTopInputs;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsWorkplace = () => {\r\n  const { formik } = useContext(StepsContext);\r\n  const handleEmployerChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ workplace: \"\", workplaceOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"workplaceOther\", \"\");\r\n    }\r\n  };\r\n\r\n  const handleEmployerOtherChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ workplace: \"\", workplaceOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"workplace\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Miejsce Pracy:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"workplace\"\r\n        value={formik.values.workplace}\r\n        onChange={handleEmployerChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"poz1\", \"wro1\", \"wro2\", \"wro5\", \"lcj\", \"ktw1\", \"ktw3\", \"szzl\"].map(\r\n          workplace => {\r\n            return (\r\n              <FormControlLabel\r\n                key={workplace}\r\n                value={workplace}\r\n                control={<Radio />}\r\n                label={workplace}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </RadioGroup>\r\n      <TextField\r\n        type={\"text\"}\r\n        name={\"workplaceOther\"}\r\n        label={\"Inne\"}\r\n        value={formik.values.workplaceOther}\r\n        onChange={handleEmployerOtherChange}\r\n        onBlur={formik.handleBlur}\r\n        size=\"small\"\r\n      />\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.workplace || formik.touched.workplaceOther) &&\r\n          formik.errors.workplace && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.workplace}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsWorkplace;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsConstract = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Umowa:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"contract\"\r\n        value={formik.values.contract}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\r\n          \"Na czas nieokreślony\",\r\n          \"Na czas określony\",\r\n          \"Okres próbny\",\r\n          \"Umowa zlecenie\",\r\n        ].map(contract => {\r\n          return (\r\n            <FormControlLabel\r\n              key={contract}\r\n              value={contract}\r\n              control={<Radio />}\r\n              label={contract}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.contract || formik.touched.contract) &&\r\n          formik.errors.contract && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.contract}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsConstract;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsWorktime = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Wymiar czasu pracy:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"worktime\"\r\n        value={formik.values.worktime}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Cały etat\", \"Pół etatu\"].map(worktime => {\r\n          return (\r\n            <FormControlLabel\r\n              key={worktime}\r\n              value={worktime}\r\n              control={<Radio />}\r\n              label={worktime}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.worktime || formik.touched.worktime) &&\r\n          formik.errors.worktime && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.worktime}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsWorktime;\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\n\r\nconst StepInputsDepartment = () => {\r\n  const { formik } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      {[\r\n        { label: \"Dział\", value: \"department\" },\r\n        { label: \"Login\", value: \"login\" },\r\n      ].map(({ label, value }) => {\r\n        return (\r\n          <FormGroup key={label}>\r\n            <TextField\r\n              type=\"text\"\r\n              id={value}\r\n              name={value}\r\n              label={label}\r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"small\"\r\n            />\r\n            <Typography variant=\"body1\">\r\n              {formik.touched[value as keyof typeof formik.touched] &&\r\n                formik.errors[value as keyof typeof formik.errors] && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors[value as keyof typeof formik.errors]}\r\n                  </span>\r\n                )}\r\n            </Typography>\r\n          </FormGroup>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepInputsDepartment;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsMembership = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Przynależność do innych związków:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"membership\"\r\n        value={formik.values.membership}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Nie należę\", \"Należę\", \"Nie należę nie chcę\"].map(membership => {\r\n          return (\r\n            <FormControlLabel\r\n              key={membership}\r\n              value={membership}\r\n              control={<Radio />}\r\n              label={membership}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.membership || formik.touched.membership) &&\r\n          formik.errors.membership && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.membership}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsMembership;\r\n","import FormHeader from \"../FormHeader\";\r\nimport StepFormEployer from \"./stepFormInputs/StepFormEployer\";\r\nimport StepFormTopInputs from \"./stepFormInputs/StepFormTopInputs\";\r\nimport StepInputsWorkplace from \"./stepFormInputs/StepInputsWorkplace\";\r\nimport StepInputsConstract from \"./stepFormInputs/StepInputsConstract\";\r\nimport StepInputsWorktime from \"./stepFormInputs/StepInputsWorktime\";\r\nimport StepInputsDepartment from \"./stepFormInputs/StepInputsDepartment\";\r\nimport StepInputsMembership from \"./stepFormInputs/StepInputsMembership\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst StepForm = () => {\r\n  return (\r\n    <Stack>\r\n      <FormHeader />\r\n      <StepFormTopInputs />\r\n      <StepFormEployer />\r\n      <StepInputsWorkplace />\r\n      <StepInputsConstract />\r\n      <StepInputsWorktime />\r\n      <StepInputsDepartment />\r\n      <StepInputsMembership />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default StepForm;\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return prev;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return prev;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\r\nconst StepSummary = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const formikValues = Object.values(formik.values);\r\n\r\n  const dataSummary = [\r\n    \"Imię\",\r\n    \"Nazwisko\",\r\n    \"Adres\",\r\n    \"Telefon\",\r\n    \"E-mail\",\r\n    \"Pracodawca\",\r\n    \"Pracodawca\",\r\n    \"Miejsce Pracy\",\r\n    \"Miejsce Pracy\",\r\n    \"Umowa\",\r\n    \"Wymiar czasu pracy\",\r\n    \"Dział\",\r\n    \"Login\",\r\n    \"Przynależność do innych ziwązków\",\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Podsumowanie\r\n      </Typography>\r\n\r\n      {dataSummary.map((text, idx) => {\r\n        return (\r\n          <>\r\n            {formikValues[idx] === \"\" ? null : (\r\n              <Typography variant=\"body1\" sx={{ p: 1 }}>\r\n                <span key={text}>\r\n                  <strong>{text}: </strong>\r\n                  {formikValues[idx]}\r\n                </span>\r\n              </Typography>\r\n            )}\r\n          </>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StepSummary;\r\n","import Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\nimport { responsiveFontSizes } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\ninterface Props {\r\n  next: () => void;\r\n  back: () => void;\r\n  currentStepIdx: number;\r\n  steps: JSX.Element[];\r\n}\r\n\r\nconst StepsButtons = (props: Props) => {\r\n  const { formik, isSubmited } = useContext(StepsContext);\r\n\r\n  const isError = Object.values(formik.errors);\r\n\r\n  useEffect(() => {\r\n    if (isSubmited && isError.length === 0) props.next();\r\n  }, [isSubmited]);\r\n\r\n const theme = useTheme();\r\n\r\n    // const responsiveFontSize = responsiveFontSizes(theme, {\r\n    //   xs: \"3rem\",\r\n    //   sm: \"1rem\",\r\n    // });\r\n\r\n  return (\r\n    <Paper sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      {props.currentStepIdx > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => props.back()}\r\n          sx={{ width: \"35%\", p: \"0.3em\" }}\r\n        >\r\n          Wstecz\r\n        </Button>\r\n      )}\r\n\r\n      {props.currentStepIdx !== 2 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            props.next();\r\n          }}\r\n        \r\n          sx={{\r\n            width:\"35%\",\r\n            p: \"0.3em\",\r\n            marginLeft: \"auto\",\r\n        \r\n          \r\n          }}\r\n          type=\"button\"\r\n        >\r\n          {props.currentStepIdx < props.steps.length - 1 ? \"Dalej\" : \"Wyślij\"}\r\n        </Button>\r\n      )}\r\n\r\n      {props.currentStepIdx === 2 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            isSubmited && isError.length === 0 && props.next();\r\n          }}\r\n          sx={{ width: \"35%\", p: \"0.3em\" }}\r\n          type=\"submit\"\r\n        >\r\n          {isError.length === 0 ? \"Zatwierdź\" : \"Podaj dane\"}\r\n        </Button>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StepsButtons;\r\n","import Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport StepDateInfo from \"./StepDateInfo\";\r\nimport StepGeneralnfo from \"./stepGeneralInfo/StepGeneralnfo\";\r\nimport StepsHeader from \"./StepsHeader\";\r\nimport StepForm from \"./stepForm/StepForm\";\r\nimport useStepFormFormik from \"./stepForm/useStepFormFormik\";\r\nimport useMultistepForm from \"./useMultistepForm\";\r\nimport StepSummary from \"./StepSummary\";\r\nimport StepsButtons from \"./StepsButtons\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\n\r\nconst IndexSteps = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <StepDateInfo />,\r\n    <StepGeneralnfo />,\r\n    <StepForm />,\r\n    <StepSummary />,\r\n  ]);\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <StepsHeader currentStepIdx={currentStepIdx} steps={steps} />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {step}\r\n\r\n          <StepsButtons\r\n            next={next}\r\n            back={back}\r\n            currentStepIdx={currentStepIdx}\r\n            steps={steps}\r\n          />\r\n        </form>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexSteps;\r\n"],"names":["_jsxs","Card","children","Typography","variant","sx","p","fontWeight","_jsx","dataGeneralInfoParagraphs","map","paragraph","props","className","currentStepIdx","steps","length","_Fragment","formik","useContext","StepsContext","handleEmployerChange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","handleChange","target","value","setErrors","employer","employerOther","validateForm","setFieldValue","stop","_x","apply","arguments","handleLoginChange","_ref2","_callee2","_context2","_x2","FormControl","FormLabel","id","RadioGroup","row","name","values","onChange","onBlur","handleBlur","FormControlLabel","control","Radio","label","TextField","type","size","touched","errors","style","color","FormGroup","workplace","workplaceOther","handleEmployerOtherChange","contract","worktime","membership","Stack","FormHeader","StepFormTopInputs","StepFormEployer","StepInputsWorkplace","StepInputsConstract","StepInputsWorktime","StepInputsDepartment","StepInputsMembership","_useState","useState","_useState2","_slicedToArray","setCurrentStepIdx","step","isFirstStep","isLastStep","back","formikValues","Object","Box","text","idx","_useContext","isSubmited","isError","useEffect","useTheme","Paper","display","justifyContent","Button","onClick","width","marginLeft","_useMultistepForm","useMultistepForm","StepDateInfo","StepGeneralnfo","StepForm","StepSummary","Container","StepsHeader","onSubmit","handleSubmit","StepsButtons"],"sourceRoot":""}